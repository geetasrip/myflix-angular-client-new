var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.059,1,0.452]],["body/components/AppComponent.html",[0,0.103,1,0.824,2,1.074,3,0.575,4,0.493,5,0.968,6,0.968,7,0.968,8,0.968,9,0.493,10,2.977,11,0.968,12,1.539,13,0.784,14,3.171,15,1.212,16,4.984,17,1.212,18,4.566,19,0.575,20,0.83,21,2.348,22,0.575,23,0.044,24,0.968,25,1.531,26,1.531,27,3.725,28,3.725,29,3.171,30,0.858,31,3.649,32,0.575,33,0.493,34,0.575,35,0.575,36,0.968,37,1.212,38,1.212,39,0.968,40,1.386,41,0.968,42,0.83,43,0.968,44,0.575,45,0.663,46,1.386,47,0.575,48,0.663,49,0.757,50,1.322,51,0.575,52,0.663,53,0.575,54,0.663,55,0.575,56,0.968,57,0.575,58,0.858,59,0.575,60,0.674,61,0.575,62,0.575,63,0.968,64,0.575,65,0.757,66,0.575,67,0.858,68,0.858,69,0.968,70,0.968,71,0.035,72,0.035]],["title/modules/AppModule.html",[73,1.523,74,1.731]],["body/modules/AppModule.html",[0,0.089,1,0.871,3,0.428,4,0.367,9,0.367,13,0.367,23,0.046,32,0.922,33,0.367,34,0.428,35,0.428,44,0.796,45,0.494,47,0.796,48,0.494,49,0.78,51,0.796,52,0.494,53,0.796,54,0.494,55,0.832,57,0.796,58,0.639,59,0.796,60,0.582,61,0.593,62,0.796,64,0.796,65,0.78,66,0.817,67,1.014,71,0.029,72,0.029,74,3.531,75,1.443,76,2.269,77,2.216,78,2.216,79,2.216,80,2.216,81,2.684,82,3.066,83,2.216,84,1.64,85,2.716,86,3.759,87,3.066,88,3.759,89,3.066,90,3.759,91,3.066,92,1.886,93,3.759,94,1.886,95,2.716,96,2.716,97,3.759,98,2.716,99,2.216,100,2.269,101,1.28,102,3.759,103,2.716,104,3.759,105,2.716,106,3.759,107,2.716,108,3.759,109,2.716,110,2.216,111,3.759,112,0.81,113,3.759,114,1.139,115,1.139,116,3.759,117,2.716,118,3.759,119,2.716,120,3.759,121,2.716,122,3.759,123,2.716,124,3.759,125,2.716,126,3.759,127,2.216,128,1.997,129,2.993,130,1.886,131,3.23,132,1.886,133,2.716,134,1.443,135,1.443,136,1.443,137,1.886,138,2.716,139,2.716,140,1.64,141,1.139,142,2.716,143,4.651,144,1.139,145,1.443,146,2.716,147,2.716,148,2.716,149,2.716,150,2.716]],["title/modules/AppRoutingModule.html",[73,1.523,81,1.523]],["body/modules/AppRoutingModule.html",[3,0.686,4,0.588,9,0.588,23,0.045,32,0.801,33,0.588,34,0.686,35,0.686,71,0.039,72,0.039,75,2.311,81,2.698,87,3.548,89,4.142,99,4.142,100,3.247,101,2.049,141,1.825,151,4.349,152,4.349,153,4.349,154,4.349]],["title/components/DirectorCardComponent.html",[0,0.059,44,0.452]],["body/components/DirectorCardComponent.html",[0,0.095,1,0.486,2,0.963,3,0.486,4,0.416,5,0.818,6,0.818,7,0.818,8,0.818,9,0.416,11,0.818,12,1.505,13,0.767,15,1.087,17,1.087,19,0.486,20,0.744,22,0.804,23,0.045,24,1.3,30,1.082,32,0.646,33,0.416,34,0.486,35,0.486,36,0.818,37,1.087,38,1.087,39,0.818,40,1.3,41,0.818,42,0.891,43,0.818,44,0.773,45,1.01,46,1.3,47,0.486,48,0.56,49,0.64,50,1.22,51,0.486,52,0.56,53,0.486,54,0.56,55,0.486,56,0.818,57,0.486,58,0.725,59,0.486,60,0.621,61,0.486,62,0.486,63,0.818,64,0.486,65,0.64,66,0.486,67,0.725,68,0.725,69,0.818,70,0.818,71,0.031,72,0.031,112,0.919,135,2.604,155,3.997,156,1.638,157,1.087,158,1.371,159,2.604,160,2.776,161,2.472,162,1.082,163,1.705,164,1.087,165,1.461,166,0.963,167,2.14,168,2.776,169,2.14,170,0.818,171,0.818,172,2.514,173,0.725,174,1.221,175,2.14,176,2.843,177,2.514,178,1.452,179,2.14,180,0.919,181,3.193,182,3.193,183,3.193,184,3.34,185,4.095,186,4.095,187,4.095,188,1.718,189,1.293,190,1.929,191,1.452,192,1.861,193,1.638,194,2.14,195,2.843]],["title/components/EditProfileFormComponent.html",[0,0.059,47,0.452]],["body/components/EditProfileFormComponent.html",[0,0.082,1,0.371,2,0.799,3,0.628,4,0.318,5,0.624,6,0.624,7,0.624,8,0.624,9,0.318,11,0.624,12,1.442,13,0.734,15,0.901,17,0.901,19,0.371,20,0.617,22,0.76,23,0.045,25,1.672,26,1.672,30,1.238,32,0.688,33,0.318,34,0.371,35,0.371,36,0.624,37,0.901,38,0.901,39,0.624,40,1.158,41,0.624,42,0.724,43,0.624,44,0.371,45,0.428,46,1.158,47,0.688,48,0.925,49,1.212,50,1.057,51,0.371,52,0.428,53,0.371,54,0.428,55,0.371,56,0.624,57,0.371,58,0.554,59,0.371,60,0.745,61,0.371,62,0.371,63,0.624,64,0.371,65,0.488,66,0.371,67,0.554,68,0.554,69,0.624,70,0.624,71,0.026,72,0.026,112,0.702,114,0.987,115,0.987,140,3.217,141,0.987,157,0.901,158,1.188,162,1.219,164,0.901,165,1.301,166,0.799,170,0.624,171,0.624,173,0.938,174,1.437,178,1.109,180,1.013,188,0.987,189,0.987,190,0.987,196,4.347,197,1.421,198,2.358,199,2.767,200,2.358,201,3.213,202,2.319,203,2.18,204,2.341,205,3.774,206,3.03,207,2.358,208,4.821,209,1.251,210,1.547,211,3.213,212,2.18,213,2.353,214,2.767,215,2.118,216,2.118,217,3.396,218,3.396,219,3.396,220,3.396,221,2.353,222,3.396,223,3.03,224,3.396,225,1.425,226,2.353,227,3.396,228,2.051,229,1.332,230,3.251,231,3.03,232,3.985,233,3.985,234,3.985,235,3.251,236,2.562,237,1.425,238,1.425,239,2.353,240,1.92,241,2.353,242,1.92,243,2.353,244,2.353,245,2.118,246,2.353,247,1.251,248,1.251,249,2.353,250,1.634,251,1.92,252,1.634,253,0.987,254,0.987,255,2.353,256,2.353,257,2.353,258,2.353,259,1.634,260,3.985,261,2.353,262,2.353,263,2.353,264,2.353,265,2.353,266,1.634,267,1.109,268,1.109,269,1.634,270,2.353,271,1.92,272,2.353,273,1.421,274,1.421,275,1.421,276,1.421]],["title/components/GenreCardComponent.html",[0,0.059,51,0.452]],["body/components/GenreCardComponent.html",[0,0.096,1,0.5,2,0.982,3,0.5,4,0.429,5,0.842,6,0.842,7,0.842,8,0.842,9,0.429,11,0.842,12,1.511,13,0.77,15,1.108,17,1.108,19,0.5,20,0.759,22,0.812,23,0.045,24,1.108,30,1.098,32,0.658,33,0.429,34,0.5,35,0.5,36,0.842,37,1.108,38,1.108,39,0.842,40,1.315,41,0.842,42,0.901,43,0.842,44,0.5,45,0.577,46,1.315,47,0.5,48,0.577,49,0.658,50,1.238,51,0.782,52,1.015,53,0.5,54,0.577,55,0.5,56,0.842,57,0.5,58,0.746,59,0.5,60,0.63,61,0.5,62,0.5,63,0.842,64,0.5,65,0.658,66,0.5,67,0.746,68,0.746,69,0.842,70,0.842,71,0.032,72,0.032,112,0.946,134,2.634,156,1.686,157,1.108,158,1.391,159,2.634,160,2.816,161,2.52,162,1.098,163,1.721,164,1.108,165,1.478,166,0.982,167,2.203,168,2.816,169,2.203,170,0.842,171,0.842,173,0.746,174,1.244,175,2.203,176,2.898,178,1.495,179,2.203,180,0.946,184,3.405,188,1.751,189,1.331,190,1.957,191,1.495,192,1.915,193,1.686,194,2.203,195,2.898,277,4.043,278,2.588,279,2.203,280,1.915,281,3.405]],["title/components/MovieCardComponent.html",[0,0.059,53,0.452]],["body/components/MovieCardComponent.html",[0,0.063,1,0.239,2,0.571,3,0.239,4,0.205,5,0.402,6,0.402,7,0.402,8,0.402,9,0.205,11,0.402,12,1.313,13,0.669,15,0.644,17,0.644,19,0.239,20,0.441,21,2.363,22,0.791,23,0.046,24,1.53,25,1.274,26,1.274,30,1.218,32,0.672,33,0.205,34,0.239,35,0.239,36,0.402,37,0.644,38,0.644,39,0.402,40,0.922,41,0.402,42,0.956,43,0.402,44,0.548,45,0.631,46,0.922,47,0.239,48,0.275,49,0.315,50,0.806,51,0.548,52,0.631,53,0.548,54,0.963,55,0.239,56,0.402,57,0.548,58,0.817,59,0.239,60,0.669,61,0.239,62,0.239,63,0.402,64,0.239,65,0.315,66,0.239,67,0.357,68,0.357,69,0.402,70,0.402,71,0.018,72,0.018,112,0.452,114,0.636,115,0.636,130,3.626,131,2.109,134,0.805,135,0.805,136,0.805,141,0.636,144,1.965,156,0.805,157,0.644,158,0.906,159,2.352,160,1.834,161,1.466,162,1.074,163,1.526,164,0.644,165,1.036,166,0.571,170,1.175,171,1.175,172,1.236,173,1.164,174,1.557,177,1.236,180,1.496,181,2.816,182,2.816,183,2.816,188,1.857,189,1.019,190,1.701,191,0.714,193,0.805,202,1.846,203,1.791,209,0.805,210,1.27,212,1.791,225,1.019,229,1.424,236,1.29,237,1.701,238,1.701,245,0.805,247,0.805,248,0.805,250,1.052,252,1.052,253,1.787,254,1.594,267,1.144,268,1.144,269,1.686,273,1.466,274,0.915,275,0.915,276,0.915,279,1.052,280,2.941,282,4.26,283,2.889,284,1.834,285,2.833,286,2.412,287,3.473,288,2.428,289,2.478,290,1.981,291,1.981,292,2.478,293,2.428,294,2.639,295,2.428,296,2.428,297,1.516,298,2.448,299,1.846,300,2.097,301,1.466,302,2.726,303,2.572,304,2.412,305,1.516,306,2.828,307,1.516,308,2.155,309,2.428,310,1.516,311,1.981,312,2.428,313,1.981,314,1.981,315,1.516,316,1.236,317,1.516,318,3.308,319,3.074,320,1.981,321,1.516,322,1.981,323,1.516,324,1.981,325,1.516,326,1.981,327,2.428,328,1.516,329,2.428,330,2.428,331,2.412,332,2.428,333,1.516,334,1.516,335,1.516,336,2.478,337,1.052,338,1.516,339,2.428,340,1.516,341,1.516,342,1.236,343,1.516,344,1.236,345,2.572,346,2.833,347,1.236,348,1.236,349,1.516,350,1.516,351,1.516,352,1.686,353,1.981,354,1.052,355,1.236,356,1.236,357,1.236,358,0.915,359,1.516,360,1.516,361,1.516,362,1.516,363,3.473,364,1.516,365,1.981,366,2.428,367,2.428,368,2.109,369,2.109,370,1.981,371,1.981,372,1.686,373,2.412,374,2.412,375,1.686,376,1.686,377,1.052,378,1.686,379,1.686,380,1.686,381,2.412,382,1.236,383,1.686,384,1.686,385,1.516,386,1.236,387,1.236,388,1.236,389,1.236,390,2.833,391,1.981,392,1.981,393,1.236,394,1.981,395,1.236,396,1.236,397,1.052,398,1.052,399,1.052,400,1.236,401,1.981,402,1.236,403,1.236,404,1.052,405,1.981,406,1.236,407,1.236,408,1.052]],["title/components/NavigationComponent.html",[0,0.059,55,0.452]],["body/components/NavigationComponent.html",[0,0.086,1,0.4,2,0.844,3,0.4,4,0.343,5,0.674,6,0.674,7,0.674,8,0.674,9,0.343,11,0.674,12,1.461,13,0.744,15,0.951,17,0.951,19,0.4,20,0.652,22,0.655,23,0.045,30,1.121,32,0.655,33,0.343,34,0.4,35,0.4,36,0.674,37,0.951,38,0.951,39,0.674,40,1.198,41,0.674,42,0.755,43,0.674,44,0.4,45,0.461,46,1.198,47,0.4,48,0.461,49,0.989,50,1.103,51,0.4,52,0.461,53,0.4,54,0.755,55,0.712,56,0.674,57,0.4,58,0.597,59,0.4,60,0.644,61,0.4,62,0.4,63,0.674,64,0.4,65,0.527,66,0.4,67,0.978,68,0.978,69,0.674,70,0.674,71,0.027,72,0.027,84,3.068,101,1.196,114,1.065,115,1.065,144,1.895,157,0.951,158,1.239,162,1.121,164,0.951,165,1.347,166,0.597,170,0.674,171,0.674,173,0.844,174,1.347,188,1.895,189,1.998,190,2.214,191,1.689,203,2.128,212,2.244,231,2.49,266,1.763,267,1.196,268,1.689,271,2.071,273,1.533,274,2.876,275,2.876,276,2.876,302,1.905,345,2.51,352,3.136,368,2.49,369,1.763,372,1.763,373,1.763,374,3.308,375,2.49,376,1.763,377,2.49,378,1.763,379,1.763,380,1.763,381,2.49,383,1.763,384,1.763,397,1.763,399,1.763,404,2.49,405,2.071,408,2.49,409,2.071,410,3.586,411,4.157,412,3.586,413,3.715,414,4.516,415,2.539,416,2.539,417,2.539,418,2.539,419,2.985,420,2.165,421,3.586,422,3.586,423,3.586,424,2.071,425,2.071,426,2.071,427,2.071,428,1.763,429,2.539,430,5.082,431,2.925,432,3.586,433,3.586,434,3.586,435,3.586,436,2.539,437,2.539,438,2.539,439,2.539,440,2.539,441,2.539,442,2.539,443,2.539,444,2.539,445,2.539,446,2.539,447,2.539,448,2.925,449,2.539,450,4.516,451,2.925,452,2.925,453,2.539,454,2.539,455,2.539,456,2.539,457,2.539,458,2.925,459,2.071,460,2.071,461,2.071,462,2.071,463,2.539,464,2.539,465,4.157,466,2.539,467,2.071,468,2.071]],["title/components/SynopsisCardComponent.html",[0,0.059,57,0.452]],["body/components/SynopsisCardComponent.html",[0,0.096,1,0.5,2,0.982,3,0.5,4,0.429,5,0.842,6,0.842,7,0.842,8,0.842,9,0.429,11,0.842,12,1.511,13,0.77,15,1.108,17,1.108,19,0.5,20,0.759,21,2.198,22,0.812,23,0.045,24,1.108,30,1.098,32,0.658,33,0.429,34,0.5,35,0.5,36,0.842,37,1.108,38,1.108,39,0.842,40,1.315,41,0.842,42,0.848,43,0.842,44,0.5,45,0.577,46,1.315,47,0.5,48,0.577,49,0.658,50,1.238,51,0.5,52,0.577,53,0.5,54,0.577,55,0.5,56,0.842,57,0.782,58,1.287,59,0.5,60,0.63,61,0.5,62,0.5,63,0.842,64,0.5,65,0.658,66,0.5,67,0.746,68,0.746,69,0.842,70,0.842,71,0.032,72,0.032,112,0.946,136,2.634,156,1.686,157,1.108,158,1.391,159,2.634,160,2.816,161,2.52,162,1.098,163,1.721,164,1.108,165,1.478,166,0.982,167,2.203,168,2.816,169,2.203,170,0.842,171,0.842,173,0.746,174,1.244,175,2.203,176,2.898,178,1.495,179,2.203,180,0.946,188,1.751,189,1.331,190,1.957,191,1.495,192,1.915,193,1.686,194,2.203,195,2.898,278,2.588,279,2.203,280,1.915,281,3.405,469,4.043,470,4.174]],["title/interfaces/User.html",[60,0.387,471,1.523]],["body/interfaces/User.html",[3,0.291,4,0.249,9,0.249,13,0.466,14,1.281,19,0.291,20,0.515,21,1.625,22,0.658,23,0.046,24,1.315,29,1.281,32,0.658,33,0.249,34,0.447,35,0.447,42,0.759,45,0.335,48,0.335,52,0.515,54,0.759,60,0.62,61,0.291,71,0.022,72,0.022,73,0.98,94,1.281,141,2.197,144,2.079,145,2.341,162,0.666,163,1.473,166,0.434,173,1.186,178,0.869,180,1.545,204,2.491,210,0.617,215,2.056,216,2.056,225,1.623,228,1.71,229,1.732,236,1.505,237,2.079,238,2.079,245,1.505,253,1.623,254,2.218,284,2.336,299,2.679,300,3.044,301,1.114,302,1.832,303,1.71,304,2.686,306,2.931,308,2.679,331,2.394,337,1.967,358,1.114,419,1.114,420,1.114,471,0.98,472,1.845,473,1.114,474,1.114,475,3.156,476,2.394,477,1.505,478,1.505,479,2.311,480,3.156,481,4.113,482,2.311,483,4.226,484,1.505,485,1.281,486,1.505,487,1.505,488,1.505,489,2.311,490,1.114,491,1.967,492,1.281,493,1.505,494,1.505,495,1.505,496,1.505,497,1.281,498,1.114,499,4.226,500,2.311,501,1.505,502,1.281,503,2.719,504,1.281,505,3.742,506,1.505,507,2.311,508,2.813,509,2.311,510,1.505,511,4.461,512,4.043,513,3.594,514,4.043,515,4.043,516,4.043,517,4.043,518,4.043,519,4.043,520,1.505,521,1.505,522,1.505,523,1.505,524,1.505,525,1.505,526,1.505,527,1.505,528,1.505,529,1.505,530,2.813,531,1.505,532,1.505,533,1.505,534,1.505,535,1.505,536,1.505,537,1.505,538,1.505,539,1.505,540,2.394,541,1.967,542,1.505,543,2.311,544,1.505,545,1.505,546,1.505,547,1.71,548,1.505,549,2.311,550,1.505,551,2.311,552,1.505,553,2.813,554,1.505,555,3.156,556,1.505,557,2.311,558,1.505,559,1.505,560,1.505,561,1.505,562,1.505,563,1.505,564,1.281,565,1.505,566,1.505,567,1.505,568,1.505,569,1.505,570,1.505,571,1.505,572,1.505]],["title/components/UserLoginFormComponent.html",[0,0.059,59,0.452]],["body/components/UserLoginFormComponent.html",[0,0.086,1,0.401,2,0.844,3,0.656,4,0.344,5,0.675,6,0.675,7,0.675,8,0.675,9,0.344,11,0.675,12,1.461,13,0.744,15,0.952,17,0.952,19,0.401,20,0.652,22,0.78,23,0.045,24,0.952,25,1.066,26,1.066,30,1.221,32,0.752,33,0.344,34,0.401,35,0.401,36,0.675,37,0.952,38,0.952,39,0.675,40,1.199,41,0.675,42,0.756,43,0.675,44,0.401,45,0.462,46,1.199,47,0.401,48,0.462,49,0.528,50,1.104,51,0.401,52,0.462,53,0.401,54,0.462,55,0.401,56,0.675,57,0.401,58,0.598,59,0.713,60,0.738,61,0.919,62,0.401,63,0.675,64,0.401,65,0.528,66,0.401,67,0.598,68,0.598,69,0.675,70,0.675,71,0.027,72,0.027,101,1.198,110,2.927,112,0.758,114,1.066,115,1.066,128,2.805,145,2.401,157,0.952,158,1.24,162,1.285,163,1.51,164,0.952,165,1.347,166,0.844,170,0.675,171,0.675,173,0.844,174,1.347,180,0.758,197,1.535,198,2.492,199,2.888,200,2.492,201,3.309,202,2.401,203,2.245,204,1.96,207,2.492,209,1.351,210,1.593,211,3.309,212,2.245,214,2.888,223,3.434,225,1.066,229,1.39,231,2.492,237,1.505,238,1.505,247,1.351,248,1.351,253,1.066,254,1.066,259,1.765,267,1.691,268,1.691,413,3.716,419,2.167,426,2.074,427,2.074,428,2.492,498,2.167,547,2.167,573,3.187,574,4.519,575,3.888,576,3.588,577,4.519,578,2.074,579,3.588,580,2.927,581,2.542,582,2.542,583,2.542,584,2.542,585,2.074,586,2.074,587,2.542,588,2.542,589,2.074,590,2.542,591,2.542,592,2.542,593,2.542,594,2.542,595,2.074]],["title/components/UserProfileComponent.html",[0,0.059,62,0.452]],["body/components/UserProfileComponent.html",[0,0.059,1,0.22,2,0.534,3,0.22,4,0.188,5,0.37,6,0.37,7,0.37,8,0.37,9,0.188,11,0.37,12,1.285,13,0.654,15,0.602,17,0.602,19,0.22,20,0.412,21,2.242,22,0.736,23,0.046,24,1.493,25,1.204,26,1.204,30,1.197,32,0.699,33,0.188,34,0.22,35,0.22,36,0.37,37,0.602,38,0.602,39,0.37,40,0.877,41,0.37,42,0.915,43,0.37,44,0.521,45,0.601,46,0.877,47,0.452,48,0.779,49,1.005,50,0.761,51,0.521,52,0.601,53,0.22,54,0.253,55,0.22,56,0.37,57,0.521,58,0.778,59,0.22,60,0.738,61,0.22,62,0.521,63,0.37,64,0.22,65,0.289,66,0.22,67,0.328,68,0.328,69,0.37,70,0.37,71,0.017,72,0.017,73,0.74,101,0.656,112,0.415,114,0.584,115,0.584,129,0.967,131,1.992,134,0.74,135,0.74,136,0.74,137,3.566,140,0.841,141,0.952,144,0.952,157,0.602,158,0.855,159,2.074,162,1.12,163,1.482,164,0.602,165,0.986,166,0.534,170,0.966,171,0.966,173,1.073,174,1.531,180,1.419,181,2.71,182,2.71,183,2.71,188,1.799,189,1.799,190,2.189,191,0.656,192,0.841,193,1.205,202,1.757,203,1.715,204,1.938,206,0.967,209,0.74,210,1.217,212,1.715,215,1.757,216,1.205,228,1.369,229,1.375,236,1.205,237,1.387,238,1.387,245,1.757,247,0.74,248,0.74,250,1.575,251,1.136,252,0.967,253,1.204,254,1.204,267,1.069,268,1.558,269,1.575,273,0.841,274,2.198,275,2.198,276,2.198,280,2.874,283,2.923,284,1.369,286,2.296,289,2.34,290,1.85,291,1.85,292,1.85,294,2.528,298,1.369,299,2.074,300,2.356,302,1.934,303,1.369,306,2.753,308,1.757,316,1.136,318,3.498,319,3.166,320,1.85,322,1.85,324,1.85,326,3.356,336,1.136,342,1.136,344,1.136,345,2.589,346,2.698,347,1.136,348,1.136,352,1.575,353,1.136,354,0.967,355,1.136,356,1.136,357,1.136,358,1.369,365,1.85,368,2.528,369,2.71,370,1.85,371,2.969,372,2.857,373,2.857,374,3.166,375,2.857,376,2.296,377,2.296,378,0.967,379,1.992,380,1.992,381,2.296,382,1.136,383,2.528,384,2.528,386,1.136,387,1.136,388,1.136,389,1.136,390,2.34,391,1.136,392,1.136,393,1.136,394,1.85,395,1.136,396,1.136,397,1.575,399,1.575,400,2.969,401,3.719,402,1.136,403,1.136,404,1.575,406,1.85,407,2.698,408,2.528,413,3.166,420,1.369,425,1.136,431,1.85,451,1.136,452,1.85,458,2.969,459,1.85,460,1.85,461,1.85,462,1.85,467,1.136,468,1.136,476,1.575,540,2.296,541,1.575,573,3.101,596,1.136,597,2.869,598,2.268,599,2.869,600,2.969,601,3.307,602,3.307,603,2.268,604,1.393,605,1.393,606,1.393,607,1.393,608,1.393,609,1.393,610,1.393,611,1.393,612,1.393,613,1.393,614,1.393,615,1.393,616,1.393,617,1.393,618,1.393,619,1.393,620,1.393,621,2.268,622,1.393,623,1.393,624,1.393,625,1.393,626,1.393,627,1.136,628,2.268,629,2.268,630,2.268,631,2.268,632,2.268,633,2.268,634,1.393,635,1.393,636,1.393,637,2.268,638,1.393,639,2.268,640,1.393,641,1.393,642,1.393,643,2.268,644,2.268,645,3.902,646,1.393,647,1.393,648,2.268]],["title/components/UserRegistrationFormComponent.html",[0,0.059,64,0.452]],["body/components/UserRegistrationFormComponent.html",[0,0.085,1,0.396,2,0.837,3,0.396,4,0.339,5,0.666,6,0.666,7,0.666,8,0.666,9,0.339,11,0.666,12,1.458,13,0.743,15,0.944,17,0.944,19,0.396,20,0.646,22,0.748,23,0.045,24,1.192,25,1.053,26,1.053,30,1.192,32,0.799,33,0.339,34,0.396,35,0.396,36,0.666,37,0.944,38,0.944,39,0.666,40,1.192,41,0.666,42,0.751,43,0.666,44,0.396,45,0.456,46,1.192,47,0.396,48,0.456,49,0.521,50,1.096,51,0.396,52,0.456,53,0.396,54,0.456,55,0.396,56,0.666,57,0.396,58,0.59,59,0.396,60,0.757,61,0.396,62,0.396,63,0.666,64,0.709,65,1.197,66,0.396,67,0.59,68,0.59,69,0.666,70,0.666,71,0.027,72,0.027,112,0.748,114,1.053,115,1.053,128,2.75,145,1.89,157,0.944,158,1.232,162,1.238,163,1.502,164,0.944,165,1.34,166,0.837,170,0.666,171,0.666,173,0.837,174,1.34,180,0.748,197,1.515,198,2.47,199,2.868,200,2.47,201,3.293,202,2.388,203,2.235,204,1.946,207,2.47,209,1.334,210,1.585,211,3.293,212,2.235,214,2.868,215,2.195,216,2.195,223,3.12,225,1.053,229,1.502,230,2.901,235,2.047,237,1.492,238,1.492,240,2.047,242,2.047,247,1.334,248,1.334,253,1.053,254,1.053,259,1.743,266,1.743,267,1.675,268,1.675,283,1.515,298,1.515,308,1.89,319,1.743,428,2.47,502,2.47,503,2.388,504,1.743,547,2.147,573,3.124,575,4.018,578,2.047,580,2.901,585,2.047,589,2.901,595,2.047,649,4.493,650,2.51,651,2.51,652,2.51,653,2.51,654,3.556,655,3.556,656,2.51,657,2.51,658,2.51,659,2.51,660,2.51,661,2.51,662,2.51,663,2.51,664,2.51,665,2.51,666,2.51,667,2.51,668,2.51,669,2.51,670,2.51,671,3.665,672,3.665]],["title/injectables/UserRegistrationService.html",[210,0.958,477,1.523]],["body/injectables/UserRegistrationService.html",[3,0.228,4,0.195,9,0.195,13,0.398,14,1.004,19,0.228,21,1.748,22,0.782,23,0.046,24,1.053,29,1.004,30,1.182,32,0.585,33,0.195,34,0.369,35,0.464,42,0.967,45,0.425,48,0.425,52,0.614,54,0.817,60,0.624,61,0.228,71,0.018,72,0.018,73,1.242,94,1.004,141,2.081,144,2.081,145,2.109,162,0.934,163,1.577,164,0.62,166,0.692,170,1.316,171,1.316,173,1.271,178,1.101,180,1.458,204,2.392,205,1.907,206,1.623,210,0.781,215,0.768,216,0.768,225,1.825,228,2.04,229,1.883,236,1.796,237,2.204,238,2.204,245,1.242,253,1.418,254,2.107,284,0.873,285,1.907,286,1.623,299,2.828,300,3.213,301,0.873,302,2.109,303,1.776,304,2.043,306,3.124,308,2.828,331,2.757,337,2.577,354,1.623,358,1.411,419,1.411,420,1.411,471,0.768,473,3.066,474,0.873,475,1.179,476,1.004,477,1.242,478,1.179,479,1.907,480,3.548,481,3.849,482,2.757,483,4.408,484,1.179,485,1.004,486,1.179,487,1.179,488,1.179,489,2.4,490,0.873,491,1.623,492,1.004,493,1.179,494,1.907,495,1.907,496,1.907,497,1.623,498,1.411,499,4.046,500,2.4,501,1.179,502,1.623,503,2.635,504,2.043,505,3.849,506,1.907,507,1.907,508,2.4,509,1.907,510,1.907,511,4.286,512,3.764,513,3.238,514,3.764,515,3.764,516,3.764,517,3.764,518,3.764,519,3.764,520,1.907,521,2.4,522,1.907,523,1.907,524,2.4,525,1.907,526,1.907,527,1.179,528,1.907,529,1.179,530,3.238,531,1.907,532,1.907,533,1.179,534,1.907,535,1.179,536,1.179,537,1.179,538,1.907,539,1.179,540,2.757,541,2.043,542,1.907,543,1.907,544,1.907,545,1.907,546,1.907,547,2.04,548,1.907,549,2.4,550,1.907,551,3.238,552,1.907,553,2.4,554,1.179,555,3.027,556,1.907,557,1.907,558,1.179,559,1.179,560,1.179,561,1.179,562,1.179,563,1.179,564,1.004,565,1.179,566,1.179,567,1.179,568,1.179,569,1.179,570,1.179,571,1.179,572,1.179,586,1.907,600,1.907,673,1.446,674,2.337,675,2.337,676,2.337,677,1.446,678,1.446,679,1.446,680,1.446,681,1.446,682,1.446,683,1.446,684,1.446,685,1.446,686,1.446,687,1.446,688,1.446,689,1.446,690,1.446,691,1.446,692,1.446,693,1.446]],["title/components/WelcomePageComponent.html",[0,0.059,66,0.452]],["body/components/WelcomePageComponent.html",[0,0.095,1,0.491,2,0.97,3,0.491,4,0.421,5,0.826,6,0.826,7,0.826,8,0.826,9,0.421,11,0.826,12,1.507,13,0.768,15,1.094,17,1.094,19,0.491,20,0.749,22,0.65,23,0.045,27,3.364,30,1.204,32,0.776,33,0.421,34,0.491,35,0.491,36,0.826,37,1.094,38,1.094,39,0.826,40,1.306,41,0.826,42,0.84,43,0.826,44,0.491,45,0.566,46,1.306,47,0.491,48,0.566,49,0.646,50,1.227,51,0.491,52,0.566,53,0.491,54,0.566,55,0.491,56,0.826,57,0.491,58,0.733,59,0.65,60,0.692,61,0.807,62,0.491,63,0.826,64,0.65,65,0.959,66,0.776,67,1.31,68,1.088,69,0.826,70,0.826,71,0.031,72,0.031,112,0.929,128,2.191,129,2.863,132,3.652,157,1.094,158,1.378,162,0.97,164,1.094,165,1.467,166,0.733,170,0.826,171,0.826,173,1.088,174,1.568,283,2.971,294,3.554,345,2.489,424,2.54,627,3.364,671,3.364,672,3.364,694,4.29,695,2.54,696,4.622,697,4.123,698,4.92,699,4.92,700,3.114,701,3.114,702,3.114,703,3.114,704,3.114,705,3.114,706,3.114,707,3.114]],["title/coverage.html",[708,3.182]],["body/coverage.html",[0,0.118,1,0.568,9,0.487,10,2.941,22,0.568,23,0.045,44,0.568,47,0.568,49,0.94,51,0.568,53,0.568,55,0.568,57,0.568,59,0.568,60,0.487,61,0.715,62,0.568,64,0.568,65,0.94,66,0.568,71,0.034,72,0.034,128,2.408,130,2.503,132,2.503,134,1.915,135,1.915,136,1.915,137,2.503,140,2.176,155,2.941,156,2.763,196,2.941,197,2.992,210,1.205,229,1.657,277,2.941,282,2.941,398,3.985,409,2.941,469,2.941,471,1.915,473,2.992,474,2.992,477,1.915,490,2.176,503,1.915,573,2.992,596,2.941,694,2.941,695,2.941,708,2.941,709,3.605,710,3.605,711,3.605,712,3.605,713,4.956,714,3.605,715,3.605,716,3.605,717,3.605,718,4.531,719,5.358,720,5.358,721,3.605,722,3.605,723,3.605,724,3.605,725,3.605,726,3.605,727,3.605,728,3.605,729,3.605,730,3.605,731,2.941,732,3.697,733,2.941,734,3.697,735,2.941,736,2.941,737,3.605,738,3.605]],["title/dependencies.html",[76,2.079,739,1.666]],["body/dependencies.html",[23,0.045,33,0.575,71,0.038,72,0.038,76,2.569,91,4.09,92,3.481,101,2.005,127,3.472,485,2.955,740,4.256,741,5.786,742,4.256,743,5.014,744,4.256,745,4.256,746,4.256,747,4.256,748,4.256,749,4.256,750,4.256,751,4.256,752,4.256,753,4.256,754,4.256]],["title/index.html",[19,0.378,755,2.4,756,2.4]],["body/index.html",[0,0.105,4,0.523,13,0.523,23,0.036,28,4.173,42,0.703,68,0.91,71,0.036,72,0.036,84,2.336,157,1.026,298,3.089,299,2.957,301,2.336,311,3.156,498,2.858,503,2.056,564,2.686,739,2.686,757,3.868,758,4.734,759,3.868,760,5.116,761,3.156,762,3.868,763,3.868,764,4.734,765,5.469,766,5.635,767,3.868,768,3.868,769,3.868,770,3.868,771,3.868,772,3.868,773,3.868,774,3.868,775,3.868,776,5.116,777,3.868,778,5.331,779,3.868,780,3.868,781,3.868,782,3.868,783,4.734,784,4.734,785,5.331,786,3.868,787,4.734,788,3.868,789,3.868,790,3.868,791,3.868,792,4.734,793,3.868,794,3.868,795,3.868,796,3.868,797,3.868,798,5.116,799,3.868,800,3.868,801,2.686,802,3.868]],["title/modules.html",[75,2.072]],["body/modules.html",[23,0.04,71,0.04,72,0.04,74,2.746,75,2.417,81,2.417,92,3.159,497,3.159,803,4.549,804,4.549,805,5.211,806,4.549]],["title/overview.html",[801,2.708]],["body/overview.html",[1,0.889,2,0.913,23,0.045,44,0.808,47,0.808,51,0.808,53,0.808,55,0.808,57,0.808,59,0.808,62,0.808,64,0.808,66,0.808,71,0.036,72,0.036,74,3.606,75,2.062,76,2.864,77,3.166,78,3.166,79,3.166,80,3.166,81,2.722,82,3.87,83,3.166,84,2.343,398,2.695,448,3.87,471,2.062,477,2.062,801,2.695,807,3.881,808,3.881]],["title/properties.html",[20,0.626,739,1.666]],["body/properties.html",[20,0.836,23,0.042,71,0.04,72,0.04,761,3.754,809,4.601]],["title/routes.html",[100,2.355]],["body/routes.html",[23,0.04,71,0.04,72,0.04,100,2.794]],["title/miscellaneous/variables.html",[810,1.957,811,2.81]],["body/miscellaneous/variables.html",[13,0.555,19,0.648,22,0.877,23,0.045,24,1.09,25,2.282,26,2.282,71,0.037,72,0.037,144,1.724,168,2.481,225,2.06,229,1.641,313,4.005,314,3.352,473,2.481,474,2.965,490,2.965,491,2.853,492,2.853,731,3.352,732,4.438,733,3.352,734,3.352,735,4.005,736,4.005,810,3.352,811,3.352,812,4.109,813,4.91,814,4.109,815,4.109,816,4.109,817,4.109,818,4.91]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":398,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":809,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":643,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["0.4s",{"_index":463,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0/1",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":448,"title":{},"body":{"components/NavigationComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["1/6",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["100vw",{"_index":439,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":377,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["11",{"_index":808,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":389,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["13.2.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["13.2.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":762,"title":{},"body":{"index.html":{}}}],["13/16",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":195,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["150px",{"_index":466,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":453,"title":{},"body":{"components/NavigationComponent.html":{}}}],["16",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["166",{"_index":457,"title":{},"body":{"components/NavigationComponent.html":{}}}],["167",{"_index":275,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["16px",{"_index":639,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["185px",{"_index":391,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["195px",{"_index":647,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["2",{"_index":807,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["2/8",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":428,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["200px",{"_index":378,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["20px",{"_index":452,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["216",{"_index":394,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["22",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":385,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["230",{"_index":456,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":646,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["27",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":638,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["280px",{"_index":627,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["284px",{"_index":395,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["2px",{"_index":460,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["3/11",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":346,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["30px",{"_index":637,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["3px",{"_index":648,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["4000",{"_index":269,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["44",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":636,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["50px",{"_index":376,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["5px",{"_index":405,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{}}}],["6.2",{"_index":659,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["7",{"_index":401,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["7.5.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":382,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["7px",{"_index":392,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["8",{"_index":276,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["8/18",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["8vh",{"_index":438,"title":{},"body":{"components/NavigationComponent.html":{}}}],["9/18",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["93vh",{"_index":445,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_id",{"_index":475,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["absolute",{"_index":403,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["action",{"_index":406,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["actions",{"_index":396,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":301,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["add/remove",{"_index":330,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["added",{"_index":351,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovie",{"_index":285,"title":{},"body":{"components/MovieCardComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["addfavoritemovie(id",{"_index":534,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["addfavoritemovie(movieid",{"_index":296,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["again",{"_index":571,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["align",{"_index":380,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["already",{"_index":332,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["angular/compiler",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/form",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/material/toolbar",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["api",{"_index":229,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":490,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":74,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":304,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["artifacts",{"_index":779,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":515,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["auto",{"_index":449,"title":{},"body":{"components/NavigationComponent.html":{}}}],["automatically",{"_index":771,"title":{},"body":{"index.html":{}}}],["available",{"_index":497,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"modules.html":{}}}],["back",{"_index":662,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["background",{"_index":189,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["bad",{"_index":567,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["bar",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["bearer",{"_index":516,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["binding",{"_index":222,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["bio",{"_index":181,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["birth",{"_index":182,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["birthday",{"_index":216,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["black",{"_index":458,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["body",{"_index":553,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["boolean",{"_index":312,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":459,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["brings",{"_index":656,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":805,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":407,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["btn:hover",{"_index":644,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["build",{"_index":778,"title":{},"body":{"index.html":{}}}],["button",{"_index":273,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["button:hover",{"_index":464,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cake",{"_index":630,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["call",{"_index":308,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["calls",{"_index":657,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["capabilities",{"_index":796,"title":{},"body":{"index.html":{}}}],["card",{"_index":159,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["card'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["card.component.html",{"_index":161,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.scss",{"_index":160,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts",{"_index":156,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:103",{"_index":297,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:120",{"_index":325,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:140",{"_index":310,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:15",{"_index":279,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts:152",{"_index":328,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:16",{"_index":177,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:17",{"_index":295,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:18",{"_index":278,"title":{},"body":{"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts:19",{"_index":172,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:20",{"_index":333,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:21",{"_index":334,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:24",{"_index":315,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:34",{"_index":307,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:45",{"_index":305,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:58",{"_index":321,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:72",{"_index":317,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:89",{"_index":323,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:9",{"_index":169,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card/director",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["card/genre",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["card/movie",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card/synopsis",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":478,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["catcherror(this.handleerror",{"_index":519,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["center",{"_index":373,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["change",{"_index":773,"title":{},"body":{"index.html":{}}}],["check",{"_index":311,"title":{},"body":{"components/MovieCardComponent.html":{},"index.html":{}}}],["choice",{"_index":791,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["clear",{"_index":421,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cli",{"_index":760,"title":{},"body":{"index.html":{}}}],["client",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["close",{"_index":654,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":564,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["color",{"_index":190,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["command",{"_index":792,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["console.error",{"_index":563,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error('some",{"_index":560,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["console.log(resp",{"_index":356,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["console.log(response",{"_index":589,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["console.log(this.favmovies",{"_index":622,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(this.favoritemovies",{"_index":343,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.movies",{"_index":340,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.user",{"_index":620,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(userdetails",{"_index":507,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["const",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(data",{"_index":167,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["constructor(dialog",{"_index":700,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":209,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":677,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["constructor(private",{"_index":501,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["constructor(public",{"_index":424,"title":{},"body":{"components/NavigationComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(snackbar",{"_index":415,"title":{},"body":{"components/NavigationComponent.html":{}}}],["container",{"_index":368,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["content",{"_index":372,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["context",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":708,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":658,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["current",{"_index":420,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["d8afa2",{"_index":640,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dadada",{"_index":388,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["data",{"_index":163,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["data.bio",{"_index":185,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.birth",{"_index":186,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.death",{"_index":187,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.description",{"_index":281,"title":{},"body":{"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["data.name",{"_index":184,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{}}}],["data.service",{"_index":248,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":474,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:115",{"_index":688,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:132",{"_index":690,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:149",{"_index":687,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:162",{"_index":679,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:183",{"_index":683,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:200",{"_index":682,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:217",{"_index":681,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:235",{"_index":684,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:24",{"_index":678,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:240",{"_index":691,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:38",{"_index":693,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:50",{"_index":692,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:62",{"_index":685,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:80",{"_index":689,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:98",{"_index":686,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.title",{"_index":470,"title":{},"body":{"components/SynopsisCardComponent.html":{}}}],["date",{"_index":476,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["death",{"_index":183,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["declaring",{"_index":487,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["decorators",{"_index":175,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["delete",{"_index":540,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["delete(apiurl",{"_index":543,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie",{"_index":354,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie(movieid",{"_index":544,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["deleteuser",{"_index":600,"title":{},"body":{"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["deleteuser(username",{"_index":542,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["dependencies",{"_index":76,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":280,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["dev",{"_index":768,"title":{},"body":{"index.html":{}}}],["development",{"_index":763,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":283,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialogref",{"_index":201,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dirctor's",{"_index":523,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directed",{"_index":365,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["direction",{"_index":634,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["directive",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":777,"title":{},"body":{"index.html":{}}}],["director",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["director's",{"_index":525,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directorcardcomponent",{"_index":44,"title":{"components/DirectorCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directors",{"_index":527,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directory",{"_index":782,"title":{},"body":{"index.html":{}}}],["display",{"_index":319,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["displayed",{"_index":234,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["dist",{"_index":781,"title":{},"body":{"index.html":{}}}],["div",{"_index":440,"title":{},"body":{"components/NavigationComponent.html":{}}}],["divider",{"_index":467,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["documentation",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["duration",{"_index":268,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dynamic",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":789,"title":{},"body":{"index.html":{}}}],["edit",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["editprofileformcomponent",{"_index":47,"title":{"components/EditProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":205,"title":{},"body":{"components/EditProfileFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["edituser(this.username",{"_index":256,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["edituser(username",{"_index":538,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":215,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["empty",{"_index":550,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["end",{"_index":299,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["endpoint",{"_index":580,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["entire",{"_index":495,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["environment",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":555,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.error",{"_index":557,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.error.message",{"_index":562,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.status",{"_index":565,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["errorevent",{"_index":559,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["evenly",{"_index":642,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["execute",{"_index":787,"title":{},"body":{"index.html":{}}}],["exit_to_app",{"_index":435,"title":{},"body":{"components/NavigationComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extractresponsedata",{"_index":674,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["extractresponsedata(res",{"_index":552,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["extracttion",{"_index":548,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["false",{"_index":314,"title":{},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["fav",{"_index":645,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favmovies",{"_index":599,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite",{"_index":302,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["favorite.director.name",{"_index":633,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite.title",{"_index":632,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite_border",{"_index":367,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favoritemovies",{"_index":284,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["favoritemy",{"_index":433,"title":{},"body":{"components/NavigationComponent.html":{}}}],["favorites",{"_index":352,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["favs",{"_index":533,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["fetch",{"_index":247,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":202,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["ffffff",{"_index":386,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["field",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["files",{"_index":774,"title":{},"body":{"index.html":{}}}],["first",{"_index":794,"title":{},"body":{"index.html":{}}}],["flex",{"_index":369,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["font",{"_index":383,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["form",{"_index":198,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":200,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":199,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":197,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":246,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:13",{"_index":244,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:16",{"_index":576,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":221,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:19",{"_index":583,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":582,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":585,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:22",{"_index":584,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":213,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:25",{"_index":581,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":242,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:27",{"_index":241,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:28",{"_index":243,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:29",{"_index":652,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:30",{"_index":651,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:31",{"_index":240,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:34",{"_index":578,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:38",{"_index":239,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:41",{"_index":650,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:53",{"_index":226,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form/edit",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["form/user",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["format",{"_index":238,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["formsmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":253,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["further",{"_index":797,"title":{},"body":{"index.html":{}}}],["generate",{"_index":776,"title":{},"body":{"index.html":{}}}],["generated",{"_index":759,"title":{},"body":{"index.html":{}}}],["genre",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["genrecardcomponent",{"_index":51,"title":{"components/GenreCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genres",{"_index":529,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["get(apiurl",{"_index":513,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getallmovies",{"_index":337,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getdirector",{"_index":524,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getdirector(name",{"_index":526,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getfavoritemovies",{"_index":286,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["getfavoritemovies(username",{"_index":532,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getgenre",{"_index":675,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getgenre(name",{"_index":528,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovie",{"_index":521,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovie(title",{"_index":522,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovies",{"_index":287,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["getting",{"_index":755,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":206,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["getuser(username",{"_index":531,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getuserinfo",{"_index":601,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["go",{"_index":800,"title":{},"body":{"index.html":{}}}],["goes",{"_index":665,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["graph",{"_index":806,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":468,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["grey",{"_index":191,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["handle",{"_index":554,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["handleerror",{"_index":676,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["handleerror(error",{"_index":556,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["happened",{"_index":568,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["head",{"_index":450,"title":{},"body":{"components/NavigationComponent.html":{}}}],["header",{"_index":193,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["headers",{"_index":514,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["height",{"_index":381,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["help",{"_index":798,"title":{},"body":{"index.html":{}}}],["here",{"_index":666,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":500,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["http://localhost:4200",{"_index":770,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":480,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["httpclientmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":482,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["httpheaders",{"_index":481,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["https://my",{"_index":491,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":399,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["id",{"_index":680,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["identifier",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":390,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["implemented",{"_index":667,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["implements",{"_index":157,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["important",{"_index":408,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["information",{"_index":228,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["informations",{"_index":530,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["inherit",{"_index":442,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inject",{"_index":178,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["inject(mat_dialog_data",{"_index":176,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["injectable",{"_index":477,"title":{"injectables/UserRegistrationService.html":{}},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":673,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["input",{"_index":223,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":207,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["instanceof",{"_index":558,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["interface",{"_index":471,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":472,"title":{},"body":{"interfaces/User.html":{}}}],["isfavorite",{"_index":288,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavorite(movieid",{"_index":309,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["json",{"_index":237,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["justify",{"_index":371,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["karma",{"_index":788,"title":{},"body":{"index.html":{}}}],["later",{"_index":572,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["left",{"_index":451,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["list",{"_index":331,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["literal",{"_index":168,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":231,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["localstorage.clear",{"_index":425,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.getitem('token",{"_index":512,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.getitem('user",{"_index":245,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.setitem('password",{"_index":263,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["localstorage.setitem('token",{"_index":592,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":590,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('username",{"_index":261,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["locates",{"_index":422,"title":{},"body":{"components/NavigationComponent.html":{}}}],["log",{"_index":419,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["logged",{"_index":427,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["logic",{"_index":664,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["login",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["logindata",{"_index":587,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["loginuser",{"_index":574,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logo",{"_index":436,"title":{},"body":{"components/NavigationComponent.html":{}}}],["making",{"_index":496,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["map",{"_index":486,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["map(this.extractresponsedata",{"_index":518,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["margin",{"_index":374,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["mat",{"_index":188,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["mat_dialog_data",{"_index":179,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["matbuttonmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":294,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":211,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matformfieldmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":212,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":430,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menu:hover",{"_index":454,"title":{},"body":{"components/NavigationComponent.html":{}}}],["message",{"_index":233,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["methods",{"_index":164,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["min",{"_index":444,"title":{},"body":{"components/NavigationComponent.html":{}}}],["miscellaneous",{"_index":810,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":668,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":73,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["modules",{"_index":75,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":799,"title":{},"body":{"index.html":{}}}],["movie",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["movie._id",{"_index":360,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie.director.name",{"_index":366,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie.title",{"_index":363,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movieall",{"_index":432,"title":{},"body":{"components/NavigationComponent.html":{}}}],["moviecardcomponent",{"_index":53,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":303,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["movies",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["myflix",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["myflixangularclient",{"_index":757,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["navigate",{"_index":769,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":410,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navigation.component.html",{"_index":412,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":411,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["navigationcomponent",{"_index":55,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":793,"title":{},"body":{"index.html":{}}}],["new",{"_index":503,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"index.html":{}}}],["new.herokuapp.com",{"_index":492,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["new.herokuapp.com/users/test9090908989000/movies/60c6ef56e3b43ae28bea2852",{"_index":537,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["ng",{"_index":766,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":165,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["non",{"_index":545,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["notifications",{"_index":661,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["null",{"_index":536,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["object",{"_index":225,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":483,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["occured",{"_index":561,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["ok",{"_index":267,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["oninit",{"_index":158,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["open",{"_index":318,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opendirectordialog",{"_index":289,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opendirectordialog(name",{"_index":316,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["openeditprofileformdialog",{"_index":602,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["opengenredialog",{"_index":290,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opengenredialog(name",{"_index":320,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opensynopsisdialog",{"_index":291,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opensynopsisdialog(title",{"_index":322,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["openuserlogindialog",{"_index":698,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":699,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":171,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":441,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":801,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":739,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":397,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["page",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":697,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":696,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":695,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":701,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:12",{"_index":705,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:13",{"_index":702,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:14",{"_index":704,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:19",{"_index":703,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":180,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["params",{"_index":494,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["password",{"_index":214,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["person",{"_index":431,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["personmy",{"_index":434,"title":{},"body":{"components/NavigationComponent.html":{}}}],["pipe",{"_index":517,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":509,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["platform",{"_index":790,"title":{},"body":{"index.html":{}}}],["please",{"_index":569,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["point",{"_index":300,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["popup",{"_index":232,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["position",{"_index":402,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["post(apiurl",{"_index":508,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["prefix",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":551,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["production",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":598,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":597,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":596,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":609,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":610,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:128",{"_index":608,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:145",{"_index":611,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":617,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":618,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":603,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":614,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":616,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":613,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":615,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":607,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":606,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:54",{"_index":605,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":612,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":604,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":758,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"properties.html":{}}}],["provide",{"_index":489,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["providedin",{"_index":493,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["providers",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":162,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["put(apiurl",{"_index":539,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["raised",{"_index":272,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["redirectto",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":802,"title":{},"body":{"index.html":{}}}],["register",{"_index":502,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["registered",{"_index":670,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":649,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["reload",{"_index":772,"title":{},"body":{"index.html":{}}}],["remove",{"_index":326,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["removed",{"_index":358,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["removefavoritemovie",{"_index":292,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["removefavoritemovie(movieid",{"_index":324,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["require",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":549,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resp",{"_index":252,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["resp.favoritemovies",{"_index":342,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["response",{"_index":547,"title":{},"body":{"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["response.token",{"_index":593,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["response.user.username",{"_index":591,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":254,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["returns",{"_index":173,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["rgb(161",{"_index":400,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["rgb(187",{"_index":194,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["rgb(202",{"_index":274,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["rgb(218",{"_index":393,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["rgb(245",{"_index":455,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":404,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["router",{"_index":413,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["routermodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":100,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":635,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["run",{"_index":765,"title":{},"body":{"index.html":{}}}],["running",{"_index":783,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":485,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":479,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["scaffolding",{"_index":775,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["serve",{"_index":767,"title":{},"body":{"index.html":{}}}],["server",{"_index":764,"title":{},"body":{"index.html":{}}}],["settimeout",{"_index":270,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["side",{"_index":465,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sidenav",{"_index":443,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sidenave",{"_index":446,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sign",{"_index":671,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["size",{"_index":384,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["snackbar",{"_index":203,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["solid",{"_index":461,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["space",{"_index":641,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["spacer",{"_index":447,"title":{},"body":{"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":520,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["src/.../environment.prod.ts",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/director",{"_index":155,"title":{},"body":{"components/DirectorCardComponent.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":196,"title":{},"body":{"components/EditProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/fetch",{"_index":473,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/genre",{"_index":277,"title":{},"body":{"components/GenreCardComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":282,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":409,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts:10",{"_index":416,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:11",{"_index":423,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:16",{"_index":418,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:26",{"_index":417,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/synopsis",{"_index":469,"title":{},"body":{"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":573,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":694,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":756,"title":{"index.html":{}},"body":{}}],["statements",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":541,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["store",{"_index":577,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["stored",{"_index":780,"title":{},"body":{"index.html":{}}}],["stores",{"_index":230,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["subscribe(resp",{"_index":258,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["subtitle",{"_index":387,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":655,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":235,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successfully",{"_index":266,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["support",{"_index":803,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":804,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["synopsiscardcomponent",{"_index":57,"title":{"components/SynopsisCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["test",{"_index":786,"title":{},"body":{"index.html":{}}}],["testing",{"_index":795,"title":{},"body":{"index.html":{}}}],["tests",{"_index":785,"title":{},"body":{"index.html":{}}}],["text",{"_index":379,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.addfavoritemovie(movie._id",{"_index":364,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(directorcardcomponent",{"_index":347,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(editprofileformcomponent",{"_index":626,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.dialog.open(genrecardcomponent",{"_index":344,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(synopsiscardcomponent",{"_index":348,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":707,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":706,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":259,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.favmovies",{"_index":621,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.favoritemovies",{"_index":341,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.some(movie",{"_index":359,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata",{"_index":255,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.fetchapidata.addfavoritemovie(movieid).subscribe((resp",{"_index":349,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deletefavoritemovie(movieid).subscribe((resp",{"_index":355,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.deleteuser(this.username).subscribe",{"_index":623,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((resp",{"_index":338,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.getuser(user).subscribe((resp",{"_index":250,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.userlogin(this.usercredentials).subscribe",{"_index":588,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.usercredentials).subscribe",{"_index":663,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.getfavoritemovies",{"_index":336,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.getmovies",{"_index":335,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.getuser",{"_index":249,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.getuserinfo",{"_index":619,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.http",{"_index":499,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["this.isfavorite(movie._id",{"_index":361,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.movies",{"_index":339,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.ngoninit",{"_index":353,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.removefavoritemovie(movie._id",{"_index":362,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['/welcome']).then",{"_index":429,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigate(['movies",{"_index":594,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":625,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open",{"_index":357,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('user",{"_index":669,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open('you",{"_index":426,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["this.snackbar.open('your",{"_index":265,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.snackbar.open(`${this.username",{"_index":624,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open(`${title",{"_index":350,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open(response",{"_index":595,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.user",{"_index":251,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.user.birthday",{"_index":220,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.email",{"_index":219,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.password",{"_index":218,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.username",{"_index":217,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile",{"_index":257,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile.password",{"_index":264,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile.username",{"_index":262,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["throwerror",{"_index":484,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror('something",{"_index":566,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["toggle",{"_index":329,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite",{"_index":293,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite(movie",{"_index":327,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["token",{"_index":511,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["toolbar",{"_index":437,"title":{},"body":{"components/NavigationComponent.html":{}}}],["top",{"_index":375,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["transition",{"_index":462,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["true",{"_index":313,"title":{},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":570,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["tslib",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":546,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["unit",{"_index":784,"title":{},"body":{"index.html":{}}}],["up",{"_index":672,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":260,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["updated",{"_index":236,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["updates",{"_index":227,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["url",{"_index":488,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["use",{"_index":298,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["used",{"_index":660,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["user",{"_index":60,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["user's",{"_index":306,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["user.birthday",{"_index":631,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.email",{"_index":629,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.username",{"_index":628,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usercredentials",{"_index":575,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":505,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userlogin",{"_index":586,"title":{},"body":{"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userlogin(userdetails",{"_index":510,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userloginformcomponent",{"_index":59,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userlogout",{"_index":414,"title":{},"body":{"components/NavigationComponent.html":{}}}],["username",{"_index":204,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userprofile",{"_index":208,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["userprofilecomponent",{"_index":62,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistration",{"_index":504,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userregistration(userdetails",{"_index":506,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userregistrationformcomponent",{"_index":64,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistrationservice",{"_index":210,"title":{"injectables/UserRegistrationService.html":{}},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{}}}],["users",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["users/${username}/movies/${id",{"_index":535,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["using",{"_index":579,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":224,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":811,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":761,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":498,"title":{},"body":{"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["void",{"_index":174,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcome",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcomepagecomponent",{"_index":66,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["white",{"_index":192,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["width",{"_index":345,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window.location.reload",{"_index":271,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{}}}],["wrap",{"_index":370,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["you'll",{"_index":653,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["zone.js",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myFlix-Angular-client';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileFormComponent\n\nEditProfileFormComponent\n\nAppModule -->\n\nEditProfileFormComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DirectorCardComponent\n                        \n                        \n                            EditProfileFormComponent\n                        \n                        \n                            GenreCardComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            SynopsisCardComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { GenreCardComponent } from './genre-card/genre-card.component';\nimport { DirectorCardComponent } from './director-card/director-card.component';\nimport { SynopsisCardComponent } from './synopsis-card/synopsis-card.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { EditProfileFormComponent } from './edit-profile-form/edit-profile-form.component';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: NavigationComponent },\n  { path: 'users', component: NavigationComponent },\n\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    GenreCardComponent,\n    DirectorCardComponent,\n    SynopsisCardComponent,\n    UserProfileComponent,\n    NavigationComponent,\n    EditProfileFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectorCardComponent.html":{"url":"components/DirectorCardComponent.html","title":"component - DirectorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/director-card/director-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-director-card\n            \n\n            \n                styleUrls\n                ./director-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./director-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/director-card/director-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/director-card/director-card.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/director-card/director-card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director-card',\n  templateUrl: './director-card.component.html',\n  styleUrls: ['./director-card.component.scss']\n})\nexport class DirectorCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: { name: string; bio: string; birth: string; death: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Director: {{ data.name }}\n  \n  Bio: {{ data.bio }}\n  Birth: {{ data.birth }}\n  Death: {{ data.death }}\n\n\n    \n\n    \n                \n                    ./director-card.component.scss\n                \n                .mat-card {\n  background-color: grey;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Director: {{ data.name }}    Bio: {{ data.bio }}  Birth: {{ data.birth }}  Death: {{ data.death }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileFormComponent.html":{"url":"components/EditProfileFormComponent.html","title":"component - EditProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile-form/edit-profile-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile-form\n            \n\n            \n                styleUrls\n                ./edit-profile-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userProfile\n                    \n                \n                \n                    \n                        Type :         { Username: any; Password: any; Email: any; Birthday: any; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    Username: this.user.Username,\n    Password: this.user.Password,\n    Email: this.user.Email,\n    Birthday: this.user.Birthday\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:18\n                            \n                        \n                \n                    \n                         Binding input values to userProfile object\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:53\n                \n            \n\n\n            \n                \n                    updates the user information in API\nthen stores it in localstorage. a popup message is displayed after successful updated\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        an updated user in json format\nthen stores it in localstorage. a popup message is displayed after successful updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:38\n                \n            \n\n\n            \n                \n                    get user info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit-profile-form',\n  templateUrl: './edit-profile-form.component.html',\n  styleUrls: ['./edit-profile-form.component.scss']\n})\nexport class EditProfileFormComponent implements OnInit {\n  Username = localStorage.getItem('user');\n  user: any = {};\n\n  /**\n   *  Binding input values to userProfile object\n   */\n  @Input() userProfile = {\n    Username: this.user.Username,\n    Password: this.user.Password,\n    Email: this.user.Email,\n    Birthday: this.user.Birthday\n  };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  /**\n   * get user info\n   */\n  getUser(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.user = resp;\n    });\n  }\n\n  /**\n   * updates the user information in API\n   * @function editUser\n   * @param Username {any}\n   * @param userProfile {any}\n   * @return an updated user in json format\n   * then stores it in localstorage. a popup message is displayed after successful updated\n   */\n  editUser(): void {\n    this.fetchApiData\n      .editUser(this.Username, this.userProfile)\n      .subscribe(resp => {\n        this.dialogRef.close();\n\n        // update profile in localstorage\n        localStorage.setItem('Username', this.userProfile.Username);\n        localStorage.setItem('Password', this.userProfile.Password);\n\n        this.snackBar.open('Your profile was updated successfully!', 'OK', {\n          duration: 4000\n        });\n        setTimeout(() => {\n          window.location.reload();\n        });\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    User Profile\n  \n\n  \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n\n  \n  \n    Update Profile\n  \n\n\n    \n\n    \n                \n                    ./edit-profile-form.component.scss\n                \n                mat-raised-button {\n  background-color: rgb(202, 167, 8);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Profile                                                                                                                              Update Profile  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreCardComponent.html":{"url":"components/GenreCardComponent.html","title":"component - GenreCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/genre-card/genre-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-card\n            \n\n            \n                styleUrls\n                ./genre-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./genre-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/genre-card/genre-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/genre-card/genre-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/genre-card/genre-card.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-genre-card',\n  templateUrl: './genre-card.component.html',\n  styleUrls: ['./genre-card.component.scss']\n})\nexport class GenreCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { name: string; description: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Genre: {{ data.name }}\n  \n  {{ data.description }}\n\n\n    \n\n    \n                \n                    ./genre-card.component.scss\n                \n                .mat-card {\n  background-color: grey;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Genre: {{ data.name }}    {{ data.description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                FavoriteMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getMovies\n                            \n                            \n                                isFavorite\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirectorDialog\n                            \n                            \n                                openGenreDialog\n                            \n                            \n                                openSynopsisDialog\n                            \n                            \n                                removeFavoriteMovie\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(MovieID: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:103\n                \n            \n\n\n            \n                \n                    use API end-point to add user favorite movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        an array of the movie object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:45\n                \n            \n\n\n            \n                \n                    get an array of the user's favorite movies from user's data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:34\n                \n            \n\n\n            \n                \n                    use Api call to get data of all movies\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        movies in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite(MovieID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:140\n                \n            \n\n\n            \n                \n                    check if the movie is the user's favorite?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectorDialog\n                        \n                    \n                \n            \n            \n                \nopenDirectorDialog(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:72\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenreDialog\n                        \n                    \n                \n            \n            \n                \nopenGenreDialog(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:58\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsisDialog\n                        \n                    \n                \n            \n            \n                \nopenSynopsisDialog(title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:89\n                \n            \n\n\n            \n                \n                    open a dialog to display the SynopsisCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteMovie(MovieId: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:120\n                \n            \n\n\n            \n                \n                    use API end-point to remove user favorite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        updated user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(movie: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:152\n                \n            \n\n\n            \n                \n                    toggle add/remove user's favorite function.\nif the movie is not on the favorite list, call ...\nif the movie is already on the user favorite list, call ...\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movie\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FavoriteMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\nexport class MovieCardComponent implements OnInit {\n  movies: any = [];\n  FavoriteMovies: any[] = [];\n  user: any[] = [];\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.getMovies();\n    this.getFavoriteMovies();\n  }\n\n  /**\n   * use Api call to get data of all movies\n   * @function getAllMovies\n   * @return movies in json format\n   */\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log(this.movies);\n      return this.movies;\n    });\n  }\n\n  /**\n   * get an array of the user's favorite movies from user's data\n   */\n  getFavoriteMovies(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.FavoriteMovies = resp.FavoriteMovies;\n      console.log(this.FavoriteMovies);\n    });\n  }\n\n  /**\n   *open a dialog to display the GenreCardComponent\n   * @param name {string}\n   * @param description {string}\n   */\n  openGenreDialog(name: string, description: string): void {\n    this.dialog.open(GenreCardComponent, {\n      data: { name: name, description: description },\n      width: '300px'\n    });\n  }\n\n  /**\n   * open a dialog to display the DirectorCardComponent\n   * @param name {string}\n   * @param bio {string}\n   * @param birth {string}\n   * @param death {string}\n   */\n  openDirectorDialog(\n    name: string,\n    bio: string,\n    birth: string,\n    death: string\n  ): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: { name: name, bio: bio, birth: birth, death: death },\n      width: '300px'\n    });\n  }\n\n  /**\n   * open a dialog to display the SynopsisCardComponent\n   * @param title {string}\n   * @param description {string}\n   */\n  openSynopsisDialog(title: string, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: { title: title, description: description },\n      width: '300px'\n    });\n  }\n\n  /**\n   * use API end-point to add user favorite movie\n   * @function addFavoriteMovie\n   * @param MovieID {string}\n   * @param title {string}\n   * @returns an array of the movie object in json format\n   */\n  addFavoriteMovie(MovieID: string, title: string): void {\n    this.fetchApiData.addFavoriteMovie(MovieID).subscribe((resp: any) => {\n      this.snackBar.open(`${title} has been added to your favorites!`, 'OK', {\n        duration: 4000\n      });\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovies();\n  }\n\n  /**\n   * use API end-point to remove user favorite\n   * @function deleteFavoriteMovie\n   * @param MovieId {string}\n   * @param title {string}\n   * @returns updated user's data in json format\n   */\n  removeFavoriteMovie(MovieId: string, title: string): void {\n    this.fetchApiData.deleteFavoriteMovie(MovieId).subscribe((resp: any) => {\n      console.log(resp);\n      this.snackBar.open(\n        `${title} has been removed from your favorites!`,\n        'OK',\n        {\n          duration: 4000\n        }\n      );\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovies();\n  }\n\n  /**\n   * check if the movie is the user's favorite?\n   * @param MovieID {string}\n   * @returns true or false\n   */\n  isFavorite(MovieID: string): boolean {\n    return this.FavoriteMovies.some(movie => movie._id === MovieID);\n  }\n\n  /**\n   * toggle add/remove user's favorite function.\n   * if the movie is not on the favorite list, call ...\n   * @function addFavoriteMovie\n   * if the movie is already on the user favorite list, call ...\n   * @function removeFavoriteMovie\n   * @param movie {any}\n   */\n  toggleFavorite(movie: any): void {\n    this.isFavorite(movie._id)\n      ? this.removeFavoriteMovie(movie._id, movie.Title)\n      : this.addFavoriteMovie(movie._id, movie.Title);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ movie.Title }}\n      \n        Directed by: {{ movie.Director.Name }}\n      \n    \n    \n      \n    \n    \n      \n        Synopsis\n      \n      \n        Genre\n      \n      \n        Director\n      \n      \n      \n         favorite_border \n         favorite \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                .movies-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 50px;\n}\n.mat-card {\n  margin: 10px;\n  width: 200px;\n  background-color: grey;\n}\n.mat-card-header {\n  justify-content: center;\n  text-align: center;\n  height: 70px;\n}\n.mat-card-title {\n  font-size: 22px;\n  color: #ffffff;\n}\n.mat-card-subtitle {\n  color: #dadada;\n  font-size: 12px;\n}\n/* .mat-card img {\n  width: 185px;\n  margin: 7px;\n}\n */\n.img-container {\n  text-align: center;\n  width: 200px;\n  height: 300px;\n  background-color: rgb(218, 216, 216);\n}\n.img-container img {\n  width: 185px;\n  height: 284px;\n  margin: 7px;\n}\n.mat-card-actions {\n  display: flex;\n  height: 50px;\n}\n\n.mat-button {\n  padding: 0;\n}\n.mat-icon-button {\n  color: rgb(161, 7, 7);\n  position: absolute;\n  right: 5px;\n  top: 5px;\n}\n\n#action-btn {\n  color: rgb(202, 167, 8) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ movie.Title }}              Directed by: {{ movie.Director.Name }}                                          Synopsis                    Genre                    Director                           favorite_border          favorite             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLogout\n                        \n                    \n                \n            \n            \n                \nuserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:16\n                \n            \n\n\n            \n                \n                    log out the current user and clear the localstorage. Then locates to 'welcome page'\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navigation/navigation.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navigation/navigation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n  constructor(public snackBar: MatSnackBar, public router: Router) {}\n\n  /**\n   * log out the current user and clear the localstorage. Then locates to 'welcome page'\n   */\n  userLogout(): void {\n    localStorage.clear();\n    this.snackBar.open('You successfully logged out!', 'OK', {\n      duration: 2000\n    });\n    this.router.navigate(['/welcome']).then(() => {\n      window.location.reload();\n    });\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        menu\n      \n    \n    \n      \n    \n\n    \n\n    \n      movie All Movies\n      favorite My Favorites -->\n      person My Profile\n      Log Out\n    \n  \n  \n    \n      \n        \n          movieAll Movies\n        \n            favoriteMy Favorites -->\n        \n          personMy Profile\n        \n\n        \n          exit_to_app Log Out\n      \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .logo {\n  width: 200px;\n}\n\nmat-toolbar {\n  height: 8vh;\n  width: 100vw;\n  background: grey;\n  color: rgb(202, 167, 8);\n  padding-right: 50px;\n}\n\ndiv {\n  overflow: inherit;\n}\n\nmat-sidenav-container {\n  min-height: 93vh !important;\n}\n\nmat-sidenave-content {\n  text-align: center;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n.head-menu {\n  margin-left: 20px;\n  font-size: 15px;\n}\n.head-menu:hover {\n  color: rgb(245, 230, 166);\n}\n\n.head-menu-button {\n  margin-left: 20px;\n  background-color: black;\n  color: rgb(202, 167, 8);\n\n  border: 2px solid rgb(202, 167, 8);\n  transition-duration: 0.4s;\n}\n\n.head-menu-button:hover {\n  background-color: rgb(202, 167, 8);\n  color: black;\n}\n.menu-side {\n  margin-top: 10px;\n  color: rgb(202, 167, 8);\n}\n\n.side-menu-container {\n  background-color: grey;\n  width: 150px !important;\n}\n\n.side-icon {\n  margin-right: 5px;\n}\n\nmat-divider {\n  background-color: gray;\n  margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                                      movie All Movies      favorite My Favorites -->      person My Profile      Log Out                                    movieAll Movies                    favoriteMy Favorites -->                  personMy Profile                          exit_to_app Log Out                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SynopsisCardComponent.html":{"url":"components/SynopsisCardComponent.html","title":"component - SynopsisCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SynopsisCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/synopsis-card/synopsis-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-synopsis-card\n            \n\n            \n                styleUrls\n                ./synopsis-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synopsis-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/synopsis-card/synopsis-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-synopsis-card',\n  templateUrl: './synopsis-card.component.html',\n  styleUrls: ['./synopsis-card.component.scss']\n})\nexport class SynopsisCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { title: string; description: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Title: {{ data.title }}\n  \n  {{ data.description }}\n\n\n    \n\n    \n                \n                    ./synopsis-card.component.scss\n                \n                .mat-card {\n  background-color: grey;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title: {{ data.title }}    {{ data.description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SynopsisCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            Birthday\n                                        \n                                \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FavoriteMovies\n                                        \n                                \n                                \n                                        \n                                            Username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Birthday:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FavoriteMovies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FavoriteMovies:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Declaring the api url that will provide data for client app\nconst apiUrl = 'https://my-movies-app-new.herokuapp.com';\nexport interface User {\n  _id: string;\n  FavoriteMovies: Array;\n  Username: string;\n  Email: string;\n  Birthday: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n  /**\n   * Inject the HttpClient module to the constructor params\n  This will provide HttpClient to the entire class, making it available via this.http\n   * @param http \n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * call API end-point to register a new user\n   * @function userRegistration\n   * @param userDetails {any}\n   * @returns a new user object in json format\n   */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/users', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to log in a user\n   * @param userDetails {any}\n   * @returns user's data in json format\n   */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/login', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get all movies\n   * @function getAllMovies\n   * @return array of movies object in json format\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a specific movie by Title\n   * @function getMovie\n   * @param Title {any}\n   * @returns a movie object in json format\n   */\n  getMovie(Title: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies/' + Title, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a director data by dirctor's name\n   * @function getDirector\n   * @param Name {any}\n   * @returns a director's data in json format\n   */\n  getDirector(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/directors/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a genre data\n   * @param Name {any}\n   * @returns a genre data in json format\n   */\n  getGenre(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/genres/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a user's informations\n   * @param Username {any}\n   * @returns a user's information in json format\n   */\n  getUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a user's favorite movies list\n   * @param Username {any}\n   * @returns a list of the user's favorite movies in json format\n   */\n  getFavoriteMovies(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  // Add a movie to user favs\n  addFavoriteMovie(id: string): Observable {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('user');\n    return this.http\n      .post(apiUrl + `/users/${username}/movies/${id}`, null, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token\n        })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n  //https://my-movies-app-new.herokuapp.com/users/test9090908989000/movies/60c6ef56e3b43ae28bea2852\n  /**\n   * call API end-point to edit the user's informations\n   * @param Username {any}\n   * @param userDetails {any}\n   * @returns updated user's informations in json format\n   */\n  editUser(Username: any, userDetails: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .put(apiUrl + '/users/' + Username, userDetails, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to delete the current user\n   * @param Username {any}\n   * @returns delete status\n   */\n  deleteUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to delete a user's favorite movie\n   * @param MovieID {any}\n   * @returns updated user's information after removed a movie from the list in json format\n   */\n  deleteFavoriteMovie(MovieID: any): Observable {\n    const Username = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username + '/movies/' + MovieID, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Non-typed response extracttion\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || {};\n  }\n  // handle error\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occured:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userCredentials\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userCredentials\n                    \n                \n                \n                    \n                        Type :         { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:16\n                            \n                        \n                \n                    \n                        get input info and store it in userCredentials\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:34\n                \n            \n\n\n            \n                \n                    Login user via input field by using API endpoint\nAnd store the users data in localstorage\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        users data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\nexport class UserLoginFormComponent implements OnInit {\n  /**\n   * get input info and store it in userCredentials\n   */\n  @Input() userCredentials = { Username: '', Password: '' };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Login user via input field by using API endpoint\n   * And store the users data in localstorage\n   * @function userLogin\n   * @param loginData {object}\n   * @return users data in json format\n   */\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.userCredentials).subscribe(\n      response => {\n        console.log(response);\n        localStorage.setItem('user', response.user.Username);\n        localStorage.setItem('token', response.token);\n        this.dialogRef.close();\n        this.snackBar.open('You are logged in', 'OK', {\n          duration: 2000\n        });\n        this.router.navigate(['movies']);\n      },\n      response => {\n        this.snackBar.open(response, 'OK', {\n          duration: 2000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      Log in\n    \n  \n\n\n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                                                                  Log in      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                FavMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getUserInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirectorDialog\n                            \n                            \n                                openEditProfileFormDialog\n                            \n                            \n                                openGenreDialog\n                            \n                            \n                                openSynopsisDialog\n                            \n                            \n                                removeFavoriteMovie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, snackBar: MatSnackBar, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:90\n                \n            \n\n\n            \n                \n                    call API end-point to remove the current user\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        remove status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:54\n                \n            \n\n\n            \n                \n                    get user's FavoriteMovies from the user's data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \ngetUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:40\n                \n            \n\n\n            \n                \n                    call API end-point to get the user's information\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectorDialog\n                        \n                    \n                \n            \n            \n                \nopenDirectorDialog(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:128\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditProfileFormDialog\n                        \n                    \n                \n            \n            \n                \nopenEditProfileFormDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:104\n                \n            \n\n\n            \n                \n                    open a dialog to edit the user profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenreDialog\n                        \n                    \n                \n            \n            \n                \nopenGenreDialog(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:114\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsisDialog\n                        \n                    \n                \n            \n            \n                \nopenSynopsisDialog(title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:145\n                \n            \n\n\n            \n                \n                    open a dialog to display the SynopsisCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteMovie(MovieId: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:70\n                \n            \n\n\n            \n                \n                    use API end-point to remove user favorite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        updated user's data in json format\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FavMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationService, User } from '../fetch-api-data.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProfileFormComponent } from '../edit-profile-form/edit-profile-form.component';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  user: any = {};\n  Username = localStorage.getItem('user');\n\n  FavMovies: any[] = [];\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getUserInfo();\n    this.getFavoriteMovies();\n  }\n\n  /**\n   * call API end-point to get the user's information\n   * @function getUser\n   * @param Username\n   * @return user's data in json format\n   */\n  getUserInfo(): void {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.fetchApiData.getUser(user).subscribe((resp: User) => {\n        this.user = resp;\n\n        console.log(this.user);\n      });\n    }\n  }\n\n  /**\n   * get user's FavoriteMovies from the user's data\n   */\n  getFavoriteMovies(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.FavMovies = resp.FavoriteMovies;\n      console.log(this.FavMovies);\n      return this.FavMovies;\n    });\n  }\n\n  /**\n   * use API end-point to remove user favorite\n   * @function deleteFavoriteMovie\n   * @param MovieId {string}\n   * @param title {string}\n   * @returns updated user's data in json format\n   */\n  removeFavoriteMovie(MovieId: string, title: string): void {\n    this.fetchApiData.deleteFavoriteMovie(MovieId).subscribe((resp: any) => {\n      console.log(resp);\n      this.snackBar.open(\n        `${title} has been removed from your favorites!`,\n        'OK',\n        {\n          duration: 4000\n        }\n      );\n      this.ngOnInit();\n    });\n  }\n\n  /**\n   * call API end-point to remove the current user\n   * @function deleteUser\n   * @param Username {any}\n   * @return remove status\n   */\n  deleteUser(): void {\n    this.fetchApiData.deleteUser(this.Username).subscribe(() => {\n      this.snackBar.open(`${this.Username} has been removed!`, 'OK', {\n        duration: 4000\n      });\n      localStorage.clear();\n    });\n    this.router.navigate(['welcome']);\n  }\n\n  /**\n   * open a dialog to edit the user profile\n   * @module EditProfileFormComponent\n   */\n  openEditProfileFormDialog(): void {\n    this.dialog.open(EditProfileFormComponent, {\n      width: '280px'\n    });\n  }\n  /**\n   *open a dialog to display the GenreCardComponent\n   * @param name {string}\n   * @param description {string}\n   */\n  openGenreDialog(name: string, description: string): void {\n    this.dialog.open(GenreCardComponent, {\n      data: { name: name, description: description },\n      width: '300px'\n    });\n  }\n\n  /**\n   * open a dialog to display the DirectorCardComponent\n   * @param name {string}\n   * @param bio {string}\n   * @param birth {string}\n   * @param death {string}\n   */\n  openDirectorDialog(\n    name: string,\n    bio: string,\n    birth: string,\n    death: string\n  ): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: { name: name, bio: bio, birth: birth, death: death },\n      width: '300px'\n    });\n  }\n\n  /**\n   * open a dialog to display the SynopsisCardComponent\n   * @param title {string}\n   * @param description {string}\n   */\n  openSynopsisDialog(title: string, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: { title: title, description: description },\n      width: '300px'\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      User Profile\n    \n    \n    \n      \n        person\n        Username: {{ user.Username }}\n      \n        email \n        Email: {{ user.Email }}\n      \n        cake\n        Birthday: {{ user.Birthday | date }}\n    \n    \n      \n        Edit Profile\n      \n      \n        Delete User\n      \n    \n  \n\n\n\nYour Favorite Movies\n\n  \n    \n      {{ favorite.Title }}\n      \n        Directed by: {{ favorite.Director.Name }}\n      \n    \n    \n      \n    \n    \n      \n        Synopsis\n      \n      \n        Genre\n      \n      \n        Director\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                .profile-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 50px;\n}\n\nmat-card {\n  width: 500px;\n  background-color: grey;\n  color: white;\n  padding: 30px;\n}\n\nmat-card-header {\n  justify-content: center;\n  color: rgb(161, 7, 7);\n}\n\nmat-card-title {\n  font-size: 27px !important;\n}\n\nmat-card-content {\n  font-size: 16px;\n}\n\nmat-divider {\n  background-color: gray;\n  margin-top: 16px;\n}\n\n.content-container {\n  margin-top: 50px;\n  margin-left: 50px;\n}\n\nmat-icon {\n  margin-right: 10px;\n  color: #d8afa2 !important;\n}\n\n#profile-title {\n  color: rgb(202, 167, 8);\n}\n\nmat-card-actions {\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 50px;\n}\n\n.edit-btn {\n  color: rgb(202, 167, 8);\n  background-color: black;\n  border: 2px solid rgb(202, 167, 8);\n  transition-duration: 0.2s;\n}\n.edit-btn:hover {\n  background-color: rgb(202, 167, 8);\n  color: black;\n}\n\n.delete-btn {\n  color: rgb(161, 7, 7);\n  background-color: black;\n  border: 2px solid rgb(161, 7, 7);\n  transition-duration: 0.2s;\n}\n.delete-btn:hover {\n  background-color: rgb(161, 7, 7);\n  color: black;\n}\n.user-fav {\n  margin-top: 30px;\n  text-align: center;\n  font-size: 25px;\n}\n.favorites-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.favorite-card {\n  margin: 10px;\n  width: 195px;\n  background-color: black;\n}\n\n.img-container {\n  text-align: center;\n  width: 200px;\n  height: 300px;\n  background-color: rgb(218, 216, 216);\n}\n.img-container img {\n  width: 185px;\n  height: 284px;\n  margin: 7px;\n}\n\n.fav-header {\n  justify-content: center;\n  text-align: center;\n  height: 70px;\n}\n.fav-title {\n  font-size: 20px !important;\n  color: #ffffff;\n}\n.fav-subtitle {\n  color: #dadada;\n  font-size: 12px;\n}\n.fav-action {\n  margin-top: 10px;\n  display: flex;\n  height: 10px;\n}\n#fav-action-btn {\n  color: rgb(202, 167, 8) !important;\n}\n.mat-icon-button {\n  position: absolute;\n  right: 3px;\n  top: 3px;\n}\n\n.remove-btn {\n  color: rgb(161, 7, 7) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            User Profile                          person        Username: {{ user.Username }}              email         Email: {{ user.Email }}              cake        Birthday: {{ user.Birthday | date }}                      Edit Profile                    Delete User            Your Favorite Movies            {{ favorite.Title }}              Directed by: {{ favorite.Director.Name }}                                          Synopsis                    Genre                    Director            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userCredentials\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userCredentials\n                    \n                \n                \n                    \n                        Type :         { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    Username: '',\n    Password: '',\n    Email: '',\n    Birthday: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:21\n                            \n                        \n                \n                    \n                        get input data of user and stores in userCredentials\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:41\n                \n            \n\n\n            \n                \n                    call API endpoint to register a new user\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        new users data in json format\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// This import brings in the API calls we created in 6.2\nimport { UserRegistrationService } from '../fetch-api-data.service';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\nexport class UserRegistrationFormComponent implements OnInit {\n  /**\n   * get input data of user and stores in userCredentials\n   */\n  @Input() userCredentials = {\n    Username: '',\n    Password: '',\n    Email: '',\n    Birthday: ''\n  };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n  /**\n   * call API endpoint to register a new user\n   * @function userRegistration\n   * @param userCredentials {object}\n   * @return new users data in json format\n   */\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userCredentials).subscribe(\n      response => {\n        // Logic for a successful user registration goes here! (To be implemented)\n        this.dialogRef.close(); // This will close the modal on success!\n        console.log(response);\n        this.snackBar.open('user registered successfully', 'OK', {\n          duration: 2000\n        });\n      },\n      response => {\n        console.log(response);\n        this.snackBar.open(response, 'OK', {\n          duration: 2000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up!\n  \n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      Sign Up\n    \n  \n\n\n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up!                                                                                                          Sign Up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegistrationService.html":{"url":"injectables/UserRegistrationService.html","title":"injectable - UserRegistrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRegistrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                deleteFavoriteMovie\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getDirector\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getGenre\n                            \n                            \n                                getMovie\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:24\n                            \n                        \n\n                \n                    \n                            Inject the HttpClient module to the constructor params\nThis will provide HttpClient to the entire class, making it available via this.http\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteFavoriteMovie(MovieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:217\n                \n            \n\n\n            \n                \n                    call API end-point to delete a user's favorite movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's information after removed a movie from the list in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:200\n                \n            \n\n\n            \n                \n                    call API end-point to delete the current user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        delete status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(Username: any, userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:183\n                \n            \n\n\n            \n                \n                    call API end-point to edit the user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's informations in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractResponseData(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:235\n                \n            \n\n\n            \n                \n                    Non-typed response extracttion\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        response || empty object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:62\n                \n            \n\n\n            \n                \n                    call API end-point to get all movies\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of movies object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirector\n                        \n                    \n                \n            \n            \n                \ngetDirector(Name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:98\n                \n            \n\n\n            \n                \n                    call API end-point to get a director data by dirctor's name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a director's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:149\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's favorite movies list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a list of the user's favorite movies in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenre\n                        \n                    \n                \n            \n            \n                \ngetGenre(Name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:115\n                \n            \n\n\n            \n                \n                    call API end-point to get a genre data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a genre data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovie\n                        \n                    \n                \n            \n            \n                \ngetMovie(Title: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:80\n                \n            \n\n\n            \n                \n                    call API end-point to get a specific movie by Title\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Title\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a movie object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:132\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a user's information in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:50\n                \n            \n\n\n            \n                \n                    call API end-point to log in a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegistration(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:38\n                \n            \n\n\n            \n                \n                    call API end-point to register a new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a new user object in json format\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Declaring the api url that will provide data for client app\nconst apiUrl = 'https://my-movies-app-new.herokuapp.com';\nexport interface User {\n  _id: string;\n  FavoriteMovies: Array;\n  Username: string;\n  Email: string;\n  Birthday: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n  /**\n   * Inject the HttpClient module to the constructor params\n  This will provide HttpClient to the entire class, making it available via this.http\n   * @param http \n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * call API end-point to register a new user\n   * @function userRegistration\n   * @param userDetails {any}\n   * @returns a new user object in json format\n   */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/users', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to log in a user\n   * @param userDetails {any}\n   * @returns user's data in json format\n   */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/login', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get all movies\n   * @function getAllMovies\n   * @return array of movies object in json format\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a specific movie by Title\n   * @function getMovie\n   * @param Title {any}\n   * @returns a movie object in json format\n   */\n  getMovie(Title: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies/' + Title, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a director data by dirctor's name\n   * @function getDirector\n   * @param Name {any}\n   * @returns a director's data in json format\n   */\n  getDirector(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/directors/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a genre data\n   * @param Name {any}\n   * @returns a genre data in json format\n   */\n  getGenre(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/genres/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a user's informations\n   * @param Username {any}\n   * @returns a user's information in json format\n   */\n  getUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to get a user's favorite movies list\n   * @param Username {any}\n   * @returns a list of the user's favorite movies in json format\n   */\n  getFavoriteMovies(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  // Add a movie to user favs\n  addFavoriteMovie(id: string): Observable {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('user');\n    return this.http\n      .post(apiUrl + `/users/${username}/movies/${id}`, null, {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + token\n        })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n  //https://my-movies-app-new.herokuapp.com/users/test9090908989000/movies/60c6ef56e3b43ae28bea2852\n  /**\n   * call API end-point to edit the user's informations\n   * @param Username {any}\n   * @param userDetails {any}\n   * @returns updated user's informations in json format\n   */\n  editUser(Username: any, userDetails: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .put(apiUrl + '/users/' + Username, userDetails, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to delete the current user\n   * @param Username {any}\n   * @returns delete status\n   */\n  deleteUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * call API end-point to delete a user's favorite movie\n   * @param MovieID {any}\n   * @returns updated user's information after removed a movie from the list in json format\n   */\n  deleteFavoriteMovie(MovieID: any): Observable {\n    const Username = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username + '/movies/' + MovieID, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token })\n      })\n      .pipe(\n        map(this.extractResponseData),\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Non-typed response extracttion\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || {};\n  }\n  // handle error\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occured:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\nexport class WelcomePageComponent implements OnInit {\n  constructor(public dialog: MatDialog) {}\n  ngOnInit(): void {}\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      width: '280px'\n    });\n  }\n  openUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n      width: '280px'\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Welcome to myFlix!\n  \n  \n    Sign Up\n  \n  \n    Login\n  \n\n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to myFlix!        Sign Up        Login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/director-card/director-card.component.ts\n            \n            component\n            DirectorCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/edit-profile-form/edit-profile-form.component.ts\n            \n            component\n            EditProfileFormComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            UserRegistrationService\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/genre-card/genre-card.component.ts\n            \n            component\n            GenreCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/synopsis-card/synopsis-card.component.ts\n            \n            component\n            SynopsisCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.2.4\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.2.4\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlixAngularClient\nThis project was generated with Angular CLI version 13.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileFormComponent\n\nEditProfileFormComponent\n\nAppModule -->\n\nEditProfileFormComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://my-movies-app-new.herokuapp.com'\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
